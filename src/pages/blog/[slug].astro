---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props;
const { Content } = await post.render();
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <article class="blog-post">
    <header class="post-header">
      <a href="/blog" class="back-link">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M19 12H5M12 19l-7-7 7-7"/>
        </svg>
        Back to Blog
      </a>
      <h1>{post.data.title}</h1>
      <div class="post-meta">
        <time datetime={post.data.pubDate.toISOString()}>
          {post.data.pubDate.toLocaleDateString('en-us', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
          })}
        </time>
        {post.data.updatedDate && (
          <span class="updated">
            (Updated: {post.data.updatedDate.toLocaleDateString('en-us', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })})
          </span>
        )}
      </div>
      {post.data.tags.length > 0 && (
        <div class="tags">
          {post.data.tags.map((tag) => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </header>

    <div class="post-content">
      <Content />
    </div>
  </article>
</BaseLayout>

<style>
  .blog-post {
    max-width: 800px;
    margin: 0 auto;
  }

  .back-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-secondary);
    text-decoration: none;
    font-size: 0.875rem;
    margin-bottom: 2rem;
    transition: var(--transition);
  }

  .back-link:hover {
    color: var(--accent);
  }

  .post-header {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--border);
  }

  .post-header h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  .post-meta {
    display: flex;
    gap: 1rem;
    align-items: center;
    color: var(--text-secondary);
    font-size: 0.875rem;
    margin-bottom: 1rem;
  }

  .updated {
    opacity: 0.7;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    font-size: 0.875rem;
    padding: 0.25rem 0.75rem;
    background-color: var(--code-bg);
    color: var(--accent);
    border-radius: 0.25rem;
    font-weight: 500;
  }

  .post-content {
    font-size: 1.125rem;
    line-height: 1.8;
  }

  .post-content :global(h1),
  .post-content :global(h2),
  .post-content :global(h3),
  .post-content :global(h4),
  .post-content :global(h5),
  .post-content :global(h6) {
    margin-top: 2.5rem;
    margin-bottom: 1rem;
  }

  .post-content :global(h2) {
    font-size: 2rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--border);
  }

  .post-content :global(h3) {
    font-size: 1.5rem;
  }

  .post-content :global(p) {
    margin-bottom: 1.5rem;
  }

  .post-content :global(ul),
  .post-content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 2rem;
  }

  .post-content :global(li) {
    margin-bottom: 0.5rem;
  }

  .post-content :global(a) {
    color: var(--accent);
    text-decoration: none;
    border-bottom: 1px solid transparent;
    transition: var(--transition);
  }

  .post-content :global(a:hover) {
    border-bottom-color: var(--accent);
  }

  .post-content :global(blockquote) {
    border-left: 4px solid var(--accent);
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: var(--text-secondary);
  }

  .post-content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 0.5rem;
    margin: 2rem 0;
  }

  .post-content :global(pre) {
    margin: 2rem 0;
  }

  @media (max-width: 768px) {
    .post-header h1 {
      font-size: 2rem;
    }

    .post-content {
      font-size: 1rem;
    }

    .post-content :global(h2) {
      font-size: 1.5rem;
    }

    .post-content :global(h3) {
      font-size: 1.25rem;
    }
  }
</style>
